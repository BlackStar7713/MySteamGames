apply plugin: 'com.android.application'

// Load Jacoco Only if needed
if (jacocoEnabled.toBoolean()) {
    project.logger.lifecycle('Applying jacoco build file: jacoco.gradle')
    apply from: rootProject.file("jacoco.gradle")
}


// General switch for tests types this control report generation but not yet unit test selection - TODO Make this a flag
def carvedTests = project.hasProperty('carvedTests')// ? project.getProperty('carvedTests') : false //Default value false

def carvedTestSrcDir = "src/carvedTest"
def testReportPrefix = "${buildDir}/carvedTest/testExecution"
def coverageReportPrefix = "${buildDir}/carvedTest/coverage"

if (carvedTests) {
    if (project.hasProperty('testName')) {
        def testName = project.getProperty('testName')
        println ""
        println "* Processing Carved Test ${testName}"
        println ""

        carvedTestSrcDir = "src/carvedTest/${testName}"

        testReportPrefix = "${buildDir}/carvedTest/${testName}/testExecution"
        coverageReportPrefix = "${buildDir}/carvedTest/${testName}/coverage"
    }
}

android {
    signingConfigs {
    }

    sourceSets {
        test {
            if (carvedTests) {
                java.srcDirs = ["$carvedTestSrcDir"]
            }
        }
    }
    compileSdkVersion 28
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.joffreylagut.mysteamgames.mysteamgames"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 2
        versionName '2.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        renderscriptTargetApi 18
        renderscriptSupportModeEnabled true
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            testCoverageEnabled jacocoEnabled.toBoolean()
        }
    }
    productFlavors {
    }

    testOptions {

        animationsDisabled true

        unitTests.all {

            jvmArgs "-Xmx2g"

            // Nices output on the console/logs
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }

            test {
                //Get last path of default set path.
                def junitXmlTestTaskName = file("$reports.junitXml.destination").name
                def htmlTestTaskName = file("$reports.html.destination").name

                if (carvedTests) {
                    // Just use the same?
                    reports.junitXml.destination = file("$testReportPrefix/$junitXmlTestTaskName")
                    reports.html.destination = file("$testReportPrefix/$junitXmlTestTaskName")
                }

                filter {
                    //specific test method
                    if (project.hasProperty('carvedTestsFilter')){
                        includeTestsMatching project.carvedTestsFilter
                    }
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}
repositories {
    jcenter()
    mavenCentral()
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //Optional network helper
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.preference:preference:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.weiwangcn.betterspinner:library-material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    // Needed for the ViewPager
    implementation 'androidx.fragment:fragment:1.0.0'
    implementation 'androidx.legacy:legacy-support-core-ui:1.0.0'
    // ButterKnife for field and method binding
    implementation 'com.jakewharton:butterknife:10.2.3'
    testImplementation 'org.robolectric:robolectric:4.2'
    // testImplementation 'org.robolectric:robolectric:4.1'
    // testImplementation 'de.unipassau.abc:test-utils:1.0-SNAPSHOT'
    // testImplementation 'com.google.guava:guava:27.0.1-jre'
    testImplementation 'org.mockito:mockito-core:2.6.3'
    testImplementation 'androidx.test:core:1.3.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
    // GSON to easily parse the JSON files
    implementation 'com.google.code.gson:gson:2.8.0'
    // Picasso to manage image download and caching
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'jp.wasabeef:picasso-transformations:2.1.0'
    implementation 'com.firebase:firebase-jobdispatcher:0.5.2'
    // Stetho to see and manage the DB in Chrome
    implementation 'com.facebook.stetho:stetho:1.3.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    implementation 'com.facebook.stetho:stetho-okhttp:1.3.1'
    // Library to manage FloatingActionButton menu
    implementation 'com.getbase:floatingactionbutton:1.10.1'
    // Unit tests
    testImplementation 'junit:junit:4.12'
}
